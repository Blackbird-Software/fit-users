imports:
  - vendor/sylius-labs/coding-standard/easy-coding-standard.yml
  - vendor/symplify/easy-coding-standard/config/set/clean-code.yaml
  - vendor/symplify/easy-coding-standard/config/set/php_codesniffer/php-codesniffer-psr2.yaml
  - vendor/symplify/easy-coding-standard/config/set/php_cs_fixer/php-cs-fixer-psr2.yaml
  - vendor/symplify/easy-coding-standard/config/set/php71.yaml
  - vendor/symplify/easy-coding-standard/config/set/symfony.yaml

services:
  # All rules with default values

  # Rule 1: Only X indentation level per function/method (with default values)
  ObjectCalisthenics\Sniffs\Metrics\MaxNestingLevelSniff:
    maxNestingLevel: 2

  # Rule 2: There is no "else"
  ObjectCalisthenics\Sniffs\ControlStructures\NoElseSniff: ~

  # Rule 5: Only one object operator (->) per line (with default values)
  ObjectCalisthenics\Sniffs\CodeAnalysis\OneObjectOperatorPerLineSniff:
    variablesHoldingAFluentInterface: ["$queryBuilder", "$containerBuilder"]
    methodsStartingAFluentInterface: ["createQueryBuilder"]
    methodsEndingAFluentInterface: ["execute", "getQuery"]

  # Rule 6: Do not abbreviate  (with default values)
  ObjectCalisthenics\Sniffs\NamingConventions\ElementNameMinimalLengthSniff:
    minLength: 3
    allowedShortNames: ["i", "id", "Id", "to", "up"]

  # Rule 7: Keep your classes small (with default values)
  ObjectCalisthenics\Sniffs\Files\ClassTraitAndInterfaceLengthSniff:
    maxLength: 250
  ObjectCalisthenics\Sniffs\Files\FunctionLengthSniff:
    maxLength: 65
  ObjectCalisthenics\Sniffs\Metrics\PropertyPerClassLimitSniff:
    maxCount: 10
  ObjectCalisthenics\Sniffs\Metrics\MethodPerClassLimitSniff:
    maxCount: 20

  # Rule 9: Do not Use Getters and Setters
  ObjectCalisthenics\Sniffs\Classes\ForbiddenPublicPropertySniff: ~
  ObjectCalisthenics\Sniffs\NamingConventions\NoSetterSniff: ~

  PhpCsFixer\Fixer\ControlStructure\YodaStyleFixer:
    equal: false
    identical: false
    less_and_greater: false
    
  # Remove useless phpDoc
  PhpCsFixer\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer: ~
  
  # Removre unsued public methods
  Symplify\CodingStandard\Sniffs\DeadCode\UnusedPublicMethodSniff: ~

  # Metrics
  PHP_CodeSniffer\Standards\Generic\Sniffs\Files\LineLengthSniff:
    absoluteLineLimit: 120
  PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\CyclomaticComplexitySniff:
    absoluteComplexity: 6
  PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\NestingLevelSniff:
    absoluteNestingLevel: 2

parameters:
  skip:
    SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff: ~
    ObjectCalisthenics\Sniffs\CodeAnalysis\OneObjectOperatorPerLineSniff: ~
    # Symfony ruleset
    PhpCsFixer\Fixer\PhpTag\BlankLineAfterOpeningTagFixer: ~
    PhpCsFixer\Fixer\Operator\NewWithBracesFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocAlignFixer: ~
    # mutually excluded
    SlevomatCodingStandard\Sniffs\ControlStructures\DisallowYodaComparisonSniff: ~
    PhpCsFixer\Fixer\Operator\UnaryOperatorSpacesFixer: ~
    PhpCsFixer\Fixer\ClassNotation\SelfAccessorFixer: ~
